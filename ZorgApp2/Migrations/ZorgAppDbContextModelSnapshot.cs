// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZorgApp2.Models;

namespace ZorgApp2.Migrations
{
    [DbContext(typeof(ZorgAppDbContext))]
    partial class ZorgAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZorgApp2.Models.Bezoek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KlantId")
                        .HasColumnType("int");

                    b.Property<int>("MedewerkerId")
                        .HasColumnType("int");

                    b.Property<int>("PlannerId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Tijdstip_aanmelden")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("Tijdstip_afmelden")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("KlantId");

                    b.HasIndex("MedewerkerId");

                    b.HasIndex("PlannerId");

                    b.ToTable("Bezoek");
                });

            modelBuilder.Entity("ZorgApp2.Models.Handeling", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BezoekId")
                        .HasColumnType("int");

                    b.Property<int>("TaakId")
                        .HasColumnType("int");

                    b.Property<bool>("Uitvoering")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BezoekId");

                    b.HasIndex("TaakId");

                    b.ToTable("Handeling");
                });

            modelBuilder.Entity("ZorgApp2.Models.KSTaak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KlantId")
                        .HasColumnType("int");

                    b.Property<int>("TaakId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KlantId");

                    b.HasIndex("TaakId");

                    b.ToTable("KSTaak");
                });

            modelBuilder.Entity("ZorgApp2.Models.Klant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Woonplaats")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Klanten");
                });

            modelBuilder.Entity("ZorgApp2.Models.Medewerker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Gebruikersnaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wachtwoord")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medewerker");
                });

            modelBuilder.Entity("ZorgApp2.Models.Planner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Gebruikersnaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wachtwoord")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Planner");
                });

            modelBuilder.Entity("ZorgApp2.Models.Taak", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Extra_info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Omschrijving")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Taak");
                });

            modelBuilder.Entity("ZorgApp2.Models.Bezoek", b =>
                {
                    b.HasOne("ZorgApp2.Models.Klant", "Klant")
                        .WithMany("Bezoeken")
                        .HasForeignKey("KlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZorgApp2.Models.Medewerker", "Medewerker")
                        .WithMany("Bezoeken")
                        .HasForeignKey("MedewerkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZorgApp2.Models.Planner", "Planner")
                        .WithMany("Bezoeken")
                        .HasForeignKey("PlannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klant");

                    b.Navigation("Medewerker");

                    b.Navigation("Planner");
                });

            modelBuilder.Entity("ZorgApp2.Models.Handeling", b =>
                {
                    b.HasOne("ZorgApp2.Models.Bezoek", "Bezoek")
                        .WithMany("Handelingen")
                        .HasForeignKey("BezoekId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZorgApp2.Models.Taak", "Taak")
                        .WithMany("Handelingen")
                        .HasForeignKey("TaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bezoek");

                    b.Navigation("Taak");
                });

            modelBuilder.Entity("ZorgApp2.Models.KSTaak", b =>
                {
                    b.HasOne("ZorgApp2.Models.Klant", "Klant")
                        .WithMany("KSTaken")
                        .HasForeignKey("KlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZorgApp2.Models.Taak", "Taak")
                        .WithMany()
                        .HasForeignKey("TaakId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klant");

                    b.Navigation("Taak");
                });

            modelBuilder.Entity("ZorgApp2.Models.Bezoek", b =>
                {
                    b.Navigation("Handelingen");
                });

            modelBuilder.Entity("ZorgApp2.Models.Klant", b =>
                {
                    b.Navigation("Bezoeken");

                    b.Navigation("KSTaken");
                });

            modelBuilder.Entity("ZorgApp2.Models.Medewerker", b =>
                {
                    b.Navigation("Bezoeken");
                });

            modelBuilder.Entity("ZorgApp2.Models.Planner", b =>
                {
                    b.Navigation("Bezoeken");
                });

            modelBuilder.Entity("ZorgApp2.Models.Taak", b =>
                {
                    b.Navigation("Handelingen");
                });
#pragma warning restore 612, 618
        }
    }
}
